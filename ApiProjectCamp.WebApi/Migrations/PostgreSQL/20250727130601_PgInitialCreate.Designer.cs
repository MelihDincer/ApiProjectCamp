// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiProjectCamp.WebApi.Migrations.PostgreSQL
{
    [DbContext(typeof(PostgreApiContext))]
    [Migration("20250727130601_PgInitialCreate")]
    partial class PgInitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Chef", b =>
                {
                    b.Property<int>("ChefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChefId"));

                    b.Property<string>("ChefDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChefImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChefNameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChefTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChefId");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactId"));

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactMapLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactOpenHours")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FeatureId"));

                    b.Property<string>("FeatureDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeatureImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeatureSubTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeatureTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeatureVideoUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MessageId"));

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageNameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MessageSubject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ReservationCountOfPeople")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReservationEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationNameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationPhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ReservationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceIconUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Testimonial", b =>
                {
                    b.Property<int>("TestimonialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestimonialId"));

                    b.Property<string>("TestimonialComment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestimonialImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestimonialNameSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestimonialTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TestimonialId");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("ApiProjectCamp.WebApi.Entities.Product", b =>
                {
                    b.HasOne("ApiProjectCamp.WebApi.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
